package vista;

import controlador.ActividadController;
import controlador.ExceptionController;
import controlador.LoginController;
import controlador.NominasController;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import modelo.Actividad;
import modelo.Nomina;

/**
 *
 * @author inmar
 */
public class JPanel1a1 extends javax.swing.JPanel {

    /**
     * Creates new form jPanel1a1
     */
    public JPanel1a1() {
        initComponents();
        iniciaConsulta();
        iniciaPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListActividades = new javax.swing.JList<>();
        lbNomina = new javax.swing.JLabel();
        lbSalarioBase = new javax.swing.JLabel();
        lbCalculo = new javax.swing.JLabel();
        lbSalarioTotal = new javax.swing.JLabel();
        lbDNI = new javax.swing.JLabel();
        txtIDnomina = new javax.swing.JTextField();
        txtSalarioBase = new javax.swing.JTextField();
        txtCalculo = new javax.swing.JTextField();
        txtSalarioTotal = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        btModificar = new javax.swing.JButton();
        btAnterior = new javax.swing.JButton();
        btSiguiente = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("DATOS NOMINA");

        jScrollPane1.setViewportView(jListActividades);

        lbNomina.setText("ID NÓMINA: ");
        lbNomina.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbSalarioBase.setText("Salario Base: ");
        lbSalarioBase.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbCalculo.setText("Remuneración por Actividades: ");
        lbCalculo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbSalarioTotal.setText("Salario Total:");
        lbSalarioTotal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbDNI.setText("DNI: ");
        lbDNI.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtIDnomina.setEditable(false);

        txtSalarioBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalarioBaseActionPerformed(evt);
            }
        });

        txtCalculo.setEditable(false);

        txtSalarioTotal.setEditable(false);
        txtSalarioTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalarioTotalActionPerformed(evt);
            }
        });

        btModificar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btModificar.setText("MODIFICAR");
        btModificar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarActionPerformed(evt);
            }
        });

        btAnterior.setText("Anterior");
        btAnterior.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });

        btSiguiente.setText("Siguiente");
        btSiguiente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSiguienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbSalarioBase)
                            .addComponent(lbNomina))
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDnomina)
                            .addComponent(txtSalarioBase)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSalarioTotal)
                            .addComponent(lbCalculo)
                            .addComponent(lbDNI))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDNI)
                            .addComponent(txtSalarioTotal)
                            .addComponent(txtCalculo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 76, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(btModificar)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(btAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomina)
                    .addComponent(txtIDnomina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSalarioBase)
                    .addComponent(txtSalarioBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btModificar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCalculo)
                    .addComponent(txtCalculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSalarioTotal)
                    .addComponent(txtSalarioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDNI)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAnterior)
                    .addComponent(btSiguiente))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSalarioBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalarioBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalarioBaseActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed
        try {
            NominasController.anteriorNomina();
            compruebaBotones();
            mostrarNomina(NominasController.devolverNomina());
        } catch (SQLException ex) {
            ExceptionController.getError(7, "JPanel1a1.btAnteriorActionPerformed()");
        }
    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSiguienteActionPerformed
        try {
            NominasController.siguienteNomina();
            compruebaBotones();
            mostrarNomina(NominasController.devolverNomina());
        } catch (SQLException ex) {
            ExceptionController.getError(7, "JPanel1a1.btSiguienteActionPerformed()");
        }

    }//GEN-LAST:event_btSiguienteActionPerformed

    private void btModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarActionPerformed
        Float salarioBase = null;
        try {
            salarioBase = Float.valueOf(txtSalarioBase.getText());
            if (salarioBase < 500 || salarioBase > 1200.00) {
                ExceptionController.getError(4, "JPanel1a1.btModificarActionPerformed()");
            } else {
                try {
                    Float nuevoSalarioB= Float.valueOf(txtSalarioBase.getText());
                    String modificar = "UPDATE NOMINA SET SALARIOBASE = " + nuevoSalarioB + " SALARIOTOTAL="+(nuevoSalarioB+Float.valueOf(txtCalculo.getText()))
                            +"WHERE ID = " + Integer.valueOf(txtIDnomina.getText());

                    NominasController.ejecutaUpdate(modificar);
                    iniciaConsulta();
                } catch (SQLException ex) {
                    ExceptionController.getError(6, "JPanel1a1.btModificarActionPerformed()");
                }
            }
        } catch (NumberFormatException ex) {
            ExceptionController.getError(5, null);
        }


    }//GEN-LAST:event_btModificarActionPerformed

    private void txtSalarioTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalarioTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalarioTotalActionPerformed

    private void iniciaConsulta() {
        String consulta = "SELECT * FROM NOMINA WHERE ID_TRAB = " + LoginController.getAuxTrab().getId();
        try {
            NominasController.crearConsultaNomina(consulta);
        } catch (SQLException ex) {
            ExceptionController.getError(0, "JPanel1a1.iniciaConsulta()");
        }
    }

    private void compruebaBotones() {
        try {
            if (NominasController.esPrimero()) {
                btAnterior.setEnabled(false);
            } else {
                btAnterior.setEnabled(true);
            }

            if (NominasController.esUltimo()) {
                btSiguiente.setEnabled(false);
            } else {
                btSiguiente.setEnabled(true);
            }
        } catch (SQLException ex) {
            ExceptionController.getError(7, "JPanel1a1.compruebaBotones()");
        }

    }

    private void iniciaPanel() {
        compruebaBotones();
        try {
            mostrarNomina(NominasController.devolverNomina());
            txtSalarioBase.setEditable(true);
            txtSalarioTotal.setEditable(false);
            txtCalculo.setEditable(false);
            txtDNI.setEnabled(false);
            txtIDnomina.setEditable(false);
        } catch (SQLException ex) {
            ExceptionController.getError(0, "JPanel1a1.iniciaPanel()");
        }

    }

    private void mostrarNomina(Nomina nomina) {

        txtIDnomina.setText(nomina.getId() + "");
        txtSalarioBase.setText(nomina.getSalarioBase() + "");
        txtCalculo.setText(nomina.getActividades() + "");
        txtDNI.setText(LoginController.getAuxTrab().getDNI());
        float salarioTotal = nomina.getSalarioBase() + nomina.getActividades();
        txtSalarioTotal.setText(String.valueOf(salarioTotal));

        mostrarJlist(nomina.getId());
    }

    private void mostrarJlist(int idNomina) {
        String consulta = "SELECT * FROM ACTIVIDAD WHERE ID_NOM= " + idNomina;
        ActividadController.crearConsultaActividades(consulta);
        DefaultListModel model = new DefaultListModel();
        for (Actividad actividad : ActividadController.devolverActividades(idNomina)) {
            model.addElement(actividad.toStringList());
        }

        this.jListActividades.setModel(model);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btModificar;
    private javax.swing.JButton btSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jListActividades;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCalculo;
    private javax.swing.JLabel lbDNI;
    private javax.swing.JLabel lbNomina;
    private javax.swing.JLabel lbSalarioBase;
    private javax.swing.JLabel lbSalarioTotal;
    private javax.swing.JTextField txtCalculo;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtIDnomina;
    private javax.swing.JTextField txtSalarioBase;
    private javax.swing.JTextField txtSalarioTotal;
    // End of variables declaration//GEN-END:variables
}
